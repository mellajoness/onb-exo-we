{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\React Js\\\\ONB\\\\src\\\\pages\\\\Ecommerce\\\\EcommerceCustomers\\\\index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { isEmpty, size } from \"lodash\";\nimport { Button, Card, CardBody, Col, Container, Row } from \"reactstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport * as moment from 'moment'; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport EcommerceCustomerColumns from \"./EcommerceCustomerColumns\";\nimport { getCustomers } from \"../../../store/e-commerce/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EcommerceCustomers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCustomerClicks = arg => {\n      this.setState({\n        selectedCustomer: arg\n      });\n      this.toggle();\n    };\n\n    this.handleDeleteCustomer = customer => {\n      const {\n        onDeleteCustomer\n      } = this.props;\n      onDeleteCustomer(customer);\n    };\n\n    this.handleCustomerClick = arg => {\n      const customer = arg;\n      this.setState({\n        customers: {\n          id: customer.id,\n          username: customer.username,\n          phone: customer.phone,\n          email: customer.email,\n          address: customer.address,\n          rating: customer.rating,\n          walletBalance: customer.walletBalance,\n          joiningDate: customer.joiningDate\n        },\n        isEdit: true\n      });\n      this.toggle();\n    };\n\n    this.handleValidCustomerSubmit = (e, values) => {\n      const {\n        onAddNewCustomer,\n        onUpdateCustomer\n      } = this.props;\n      const {\n        isEdit,\n        customers\n      } = this.state;\n\n      if (isEdit) {\n        const updateCustomer = {\n          id: customers.id,\n          username: values.username,\n          phone: values.phone,\n          email: values.email,\n          address: values.address,\n          rating: values.rating,\n          walletBalance: values.walletBalance,\n          joiningDate: values.joiningDate\n        }; // update Customer\n\n        onUpdateCustomer(updateCustomer);\n      } else {\n        const newCustomer = {\n          id: Math.floor(Math.random() * (30 - 20)) + 20,\n          username: values[\"username\"],\n          phone: values[\"phone\"],\n          email: values[\"email\"],\n          address: values[\"address\"],\n          rating: values[\"rating\"],\n          walletBalance: values[\"walletBalance\"],\n          joiningDate: values[\"joiningDate\"]\n        }; // save new Customer\n\n        onAddNewCustomer(newCustomer);\n      }\n\n      this.setState({\n        selectedCustomer: null\n      });\n      this.toggle();\n    };\n\n    this.handleValidDate = date => {\n      const date1 = moment(new Date(date)).format('DD MMM Y');\n      return date1;\n    };\n\n    this.state = {\n      customers: [],\n      breadcrumbItems: [{\n        title: \"Ecommerce\",\n        link: \"#\"\n      }, {\n        title: \"Customer\",\n        link: \"#\"\n      }]\n    };\n    this.handleCustomerClick = this.handleCustomerClick.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleValidCustomerSubmit = this.handleValidCustomerSubmit.bind(this);\n    this.handleCustomerClicks = this.handleCustomerClicks.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      customers,\n      onGetCustomers\n    } = this.props;\n\n    if (customers && !customers.length) {\n      onGetCustomers();\n    }\n\n    this.setState({\n      customers\n    });\n  } // eslint-disable-next-line no-unused-vars\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {\n      customers\n    } = this.props;\n\n    if (!isEmpty(customers) && size(prevProps.customers) !== size(customers)) {\n      this.setState({\n        customers: {},\n        isEdit: false\n      });\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  /* Insert,Update Delete data */\n  render() {\n    const {\n      customers\n    } = this.props; //pagination customization\n\n    const pageOptions = {\n      sizePerPage: 10,\n      totalSize: customers.length,\n      // replace later with size(customers),\n      custom: true\n    };\n    const defaultSorted = [{\n      dataField: 'id',\n      order: 'desc'\n    }];\n    const {\n      SearchBar\n    } = Search;\n    const selectRow = {\n      mode: 'checkbox'\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            title: \"Ecommerce\",\n            breadcrumbItems: this.state.breadcrumbItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(PaginationProvider, {\n                    pagination: paginationFactory(pageOptions),\n                    keyField: \"id\",\n                    data: customers,\n                    children: ({\n                      paginationProps,\n                      paginationTableProps\n                    }) => /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                      keyField: \"id\",\n                      columns: EcommerceCustomerColumns(),\n                      data: customers,\n                      search: true,\n                      children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"search-box me-2 mb-2 d-inline-block\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"position-relative\",\n                                children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...toolkitProps.searchProps\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 193,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"bx bx-search-alt search-icon\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 196,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 192,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 191,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"8\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"text-sm-end\",\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"button\",\n                                color: \"success\",\n                                className: \"btn-rounded mb-2 me-2\",\n                                onClick: this.handleCustomerClicks,\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"mdi mdi-plus me-1\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 208,\n                                  columnNumber: 39\n                                }, this), \" \", \"New Customers\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 202,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 201,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 200,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"table-responsive\",\n                          children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                            keyField: \"id\",\n                            responsive: true,\n                            bordered: false,\n                            striped: false,\n                            defaultSorted: defaultSorted,\n                            selectRow: selectRow,\n                            classes: \"table align-middle table-nowrap\",\n                            headerWrapperClasses: \"thead-light\",\n                            ...toolkitProps.baseProps,\n                            ...paginationTableProps\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 216,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 215,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"pagination pagination-rounded justify-content-end mb-2\",\n                          children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 232,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nEcommerceCustomers.propTypes = {\n  customers: PropTypes.array,\n  onGetCustomers: PropTypes.func\n};\n\nconst mapStateToProps = ({\n  Ecommerce\n}) => ({\n  customers: Ecommerce.customers\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetCustomers: () => dispatch(getCustomers())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EcommerceCustomers);","map":{"version":3,"sources":["C:/Users/User/Documents/React Js/ONB/src/pages/Ecommerce/EcommerceCustomers/index.js"],"names":["React","Component","PropTypes","connect","isEmpty","size","Button","Card","CardBody","Col","Container","Row","ToolkitProvider","Search","BootstrapTable","paginationFactory","PaginationListStandalone","PaginationProvider","moment","Breadcrumbs","EcommerceCustomerColumns","getCustomers","EcommerceCustomers","constructor","props","handleCustomerClicks","arg","setState","selectedCustomer","toggle","handleDeleteCustomer","customer","onDeleteCustomer","handleCustomerClick","customers","id","username","phone","email","address","rating","walletBalance","joiningDate","isEdit","handleValidCustomerSubmit","e","values","onAddNewCustomer","onUpdateCustomer","state","updateCustomer","newCustomer","Math","floor","random","handleValidDate","date","date1","Date","format","breadcrumbItems","title","link","bind","componentDidMount","onGetCustomers","length","componentDidUpdate","prevProps","prevState","snapshot","modal","render","pageOptions","sizePerPage","totalSize","custom","defaultSorted","dataField","order","SearchBar","selectRow","mode","paginationProps","paginationTableProps","toolkitProps","searchProps","baseProps","propTypes","array","func","mapStateToProps","Ecommerce","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,QAA9B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,GAAjC,EAAsCC,SAAtC,EAAiDC,GAAjD,QAA4D,YAA5D;AACA,OAAOC,eAAP,IAA0BC,MAA1B,QAAwC,gCAAxC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,IACEC,wBADF,EAEEC,kBAFF,QAGO,kCAHP;AAIA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,OAAOC,wBAAP,MAAqC,4BAArC;AAEA,SACEC,YADF,QAEO,mCAFP;;;AAIA,MAAMC,kBAAN,SAAiCrB,SAAjC,CAA2C;AACzCsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqCnBC,oBArCmB,GAqCIC,GAAG,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAEF;AAApB,OAAd;AACA,WAAKG,MAAL;AACD,KAxCkB;;AAAA,SA4CnBC,oBA5CmB,GA4CKC,QAAD,IAAc;AACnC,YAAM;AAAEC,QAAAA;AAAF,UAAuB,KAAKR,KAAlC;AACAQ,MAAAA,gBAAgB,CAACD,QAAD,CAAhB;AACD,KA/CkB;;AAAA,SAiDnBE,mBAjDmB,GAiDGP,GAAG,IAAI;AAC3B,YAAMK,QAAQ,GAAGL,GAAjB;AAEA,WAAKC,QAAL,CAAc;AACZO,QAAAA,SAAS,EAAE;AACTC,UAAAA,EAAE,EAAEJ,QAAQ,CAACI,EADJ;AAETC,UAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAFV;AAGTC,UAAAA,KAAK,EAAEN,QAAQ,CAACM,KAHP;AAITC,UAAAA,KAAK,EAAEP,QAAQ,CAACO,KAJP;AAKTC,UAAAA,OAAO,EAAER,QAAQ,CAACQ,OALT;AAMTC,UAAAA,MAAM,EAAET,QAAQ,CAACS,MANR;AAOTC,UAAAA,aAAa,EAAEV,QAAQ,CAACU,aAPf;AAQTC,UAAAA,WAAW,EAAEX,QAAQ,CAACW;AARb,SADC;AAWZC,QAAAA,MAAM,EAAE;AAXI,OAAd;AAcA,WAAKd,MAAL;AACD,KAnEkB;;AAAA,SAwEnBe,yBAxEmB,GAwES,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACzC,YAAM;AAAEC,QAAAA,gBAAF;AAAoBC,QAAAA;AAApB,UAAyC,KAAKxB,KAApD;AACA,YAAM;AAAEmB,QAAAA,MAAF;AAAUT,QAAAA;AAAV,UAAwB,KAAKe,KAAnC;;AAEA,UAAIN,MAAJ,EAAY;AACV,cAAMO,cAAc,GAAG;AACrBf,UAAAA,EAAE,EAAED,SAAS,CAACC,EADO;AAErBC,UAAAA,QAAQ,EAAEU,MAAM,CAACV,QAFI;AAGrBC,UAAAA,KAAK,EAAES,MAAM,CAACT,KAHO;AAIrBC,UAAAA,KAAK,EAAEQ,MAAM,CAACR,KAJO;AAKrBC,UAAAA,OAAO,EAAEO,MAAM,CAACP,OALK;AAMrBC,UAAAA,MAAM,EAAEM,MAAM,CAACN,MANM;AAOrBC,UAAAA,aAAa,EAAEK,MAAM,CAACL,aAPD;AAQrBC,UAAAA,WAAW,EAAEI,MAAM,CAACJ;AARC,SAAvB,CADU,CAYV;;AACAM,QAAAA,gBAAgB,CAACE,cAAD,CAAhB;AACD,OAdD,MAcO;AAEL,cAAMC,WAAW,GAAG;AAClBhB,UAAAA,EAAE,EAAEiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,EAAtB,CAAX,IAAwC,EAD1B;AAElBlB,UAAAA,QAAQ,EAAEU,MAAM,CAAC,UAAD,CAFE;AAGlBT,UAAAA,KAAK,EAAES,MAAM,CAAC,OAAD,CAHK;AAIlBR,UAAAA,KAAK,EAAEQ,MAAM,CAAC,OAAD,CAJK;AAKlBP,UAAAA,OAAO,EAAEO,MAAM,CAAC,SAAD,CALG;AAMlBN,UAAAA,MAAM,EAAEM,MAAM,CAAC,QAAD,CANI;AAOlBL,UAAAA,aAAa,EAAEK,MAAM,CAAC,eAAD,CAPH;AAQlBJ,UAAAA,WAAW,EAAEI,MAAM,CAAC,aAAD;AARD,SAApB,CAFK,CAYL;;AACAC,QAAAA,gBAAgB,CAACI,WAAD,CAAhB;AACD;;AACD,WAAKxB,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACA,WAAKC,MAAL;AACD,KA3GkB;;AAAA,SA6GnB0B,eA7GmB,GA6GAC,IAAD,IAAU;AAC1B,YAAMC,KAAK,GAAGvC,MAAM,CAAC,IAAIwC,IAAJ,CAASF,IAAT,CAAD,CAAN,CAAuBG,MAAvB,CAA8B,UAA9B,CAAd;AACA,aAAOF,KAAP;AACD,KAhHkB;;AAEjB,SAAKR,KAAL,GAAa;AACXf,MAAAA,SAAS,EAAE,EADA;AAEX0B,MAAAA,eAAe,EAAE,CACb;AAAEC,QAAAA,KAAK,EAAG,WAAV;AAAuBC,QAAAA,IAAI,EAAG;AAA9B,OADa,EAEb;AAAED,QAAAA,KAAK,EAAG,UAAV;AAAsBC,QAAAA,IAAI,EAAG;AAA7B,OAFa;AAFN,KAAb;AAOA,SAAK7B,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB8B,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKlC,MAAL,GAAc,KAAKA,MAAL,CAAYkC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKnB,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BmB,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKtC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BsC,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAE9B,MAAAA,SAAF;AAAa+B,MAAAA;AAAb,QAAgC,KAAKzC,KAA3C;;AACA,QAAIU,SAAS,IAAI,CAACA,SAAS,CAACgC,MAA5B,EAAoC;AAClCD,MAAAA,cAAc;AACf;;AACD,SAAKtC,QAAL,CAAc;AAAEO,MAAAA;AAAF,KAAd;AACD,GAtBwC,CAwBzC;;;AACAiC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACjD,UAAM;AAAEpC,MAAAA;AAAF,QAAgB,KAAKV,KAA3B;;AACA,QAAI,CAACpB,OAAO,CAAC8B,SAAD,CAAR,IAAuB7B,IAAI,CAAC+D,SAAS,CAAClC,SAAX,CAAJ,KAA8B7B,IAAI,CAAC6B,SAAD,CAA7D,EAA0E;AACxE,WAAKP,QAAL,CAAc;AAAEO,QAAAA,SAAS,EAAE,EAAb;AAAiBS,QAAAA,MAAM,EAAE;AAAzB,OAAd;AACD;AACF;;AAEDd,EAAAA,MAAM,GAAG;AACP,SAAKF,QAAL,CAAc0C,SAAS,KAAK;AAC1BE,MAAAA,KAAK,EAAE,CAACF,SAAS,CAACE;AADQ,KAAL,CAAvB;AAGD;;AAgFD;AAEAC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEtC,MAAAA;AAAF,QAAgB,KAAKV,KAA3B,CAFO,CAIP;;AACA,UAAMiD,WAAW,GAAG;AAClBC,MAAAA,WAAW,EAAE,EADK;AAElBC,MAAAA,SAAS,EAAEzC,SAAS,CAACgC,MAFH;AAEW;AAC7BU,MAAAA,MAAM,EAAE;AAHU,KAApB;AAMA,UAAMC,aAAa,GAAG,CAAC;AACrBC,MAAAA,SAAS,EAAE,IADU;AAErBC,MAAAA,KAAK,EAAE;AAFc,KAAD,CAAtB;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAgBnE,MAAtB;AAEA,UAAMoE,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAE;AADU,KAAlB;AAIA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BAEE,QAAC,SAAD;AAAW,UAAA,KAAK,MAAhB;AAAA,kCACA,QAAC,WAAD;AAAa,YAAA,KAAK,EAAC,WAAnB;AAA+B,YAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWW;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADA,eAGE,QAAC,GAAD;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAC,IAAR;AAAA,qCACE,QAAC,IAAD;AAAA,uCACE,QAAC,QAAD;AAAA,yCACE,QAAC,kBAAD;AACE,oBAAA,UAAU,EAAE7C,iBAAiB,CAAC0D,WAAD,CAD/B;AAEE,oBAAA,QAAQ,EAAC,IAFX;AAGE,oBAAA,IAAI,EAAEvC,SAHR;AAAA,8BAKG,CAAC;AAAEiD,sBAAAA,eAAF;AAAmBC,sBAAAA;AAAnB,qBAAD,kBACC,QAAC,eAAD;AACE,sBAAA,QAAQ,EAAC,IADX;AAEE,sBAAA,OAAO,EAAEhE,wBAAwB,EAFnC;AAGE,sBAAA,IAAI,EAAEc,SAHR;AAIE,sBAAA,MAAM,MAJR;AAAA,gCAMGmD,YAAY,iBACX,QAAC,KAAD,CAAO,QAAP;AAAA,gDACE,QAAC,GAAD;AAAA,kDACE,QAAC,GAAD;AAAK,4BAAA,EAAE,EAAC,GAAR;AAAA,mDACE;AAAK,8BAAA,SAAS,EAAC,qCAAf;AAAA,qDACE;AAAK,gCAAA,SAAS,EAAC,mBAAf;AAAA,wDACE,QAAC,SAAD,OACMA,YAAY,CAACC;AADnB;AAAA;AAAA;AAAA;AAAA,wCADF,eAIE;AAAG,kCAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,wCAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kCADF,eAWE,QAAC,GAAD;AAAK,4BAAA,EAAE,EAAC,GAAR;AAAA,mDACE;AAAK,8BAAA,SAAS,EAAC,aAAf;AAAA,qDACE,QAAC,MAAD;AACE,gCAAA,IAAI,EAAC,QADP;AAEE,gCAAA,KAAK,EAAC,SAFR;AAGE,gCAAA,SAAS,EAAC,uBAHZ;AAIE,gCAAA,OAAO,EAAE,KAAK7D,oBAJhB;AAAA,wDAME;AAAG,kCAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,wCANF,EAMsC,GANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kCAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eA2BE;AAAK,0BAAA,SAAS,EAAC,kBAAf;AAAA,iDACE,QAAC,cAAD;AACE,4BAAA,QAAQ,EAAE,IADZ;AAEE,4BAAA,UAAU,MAFZ;AAGE,4BAAA,QAAQ,EAAE,KAHZ;AAIE,4BAAA,OAAO,EAAE,KAJX;AAKE,4BAAA,aAAa,EAAEoD,aALjB;AAME,4BAAA,SAAS,EAAEI,SANb;AAOE,4BAAA,OAAO,EACL,iCARJ;AAUE,4BAAA,oBAAoB,EAAE,aAVxB;AAAA,+BAWMI,YAAY,CAACE,SAXnB;AAAA,+BAYMH;AAZN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gCA3BF,eA4CE;AAAK,0BAAA,SAAS,EAAC,wDAAf;AAAA,iDACE,QAAC,wBAAD,OACMD;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gCA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAuFD;;AAnOwC;;AAsO3C7D,kBAAkB,CAACkE,SAAnB,GAA+B;AAC7BtD,EAAAA,SAAS,EAAEhC,SAAS,CAACuF,KADQ;AAE7BxB,EAAAA,cAAc,EAAE/D,SAAS,CAACwF;AAFG,CAA/B;;AAKA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAoB;AAC1C1D,EAAAA,SAAS,EAAE0D,SAAS,CAAC1D;AADqB,CAApB,CAAxB;;AAIA,MAAM2D,kBAAkB,GAAGC,QAAQ,KAAK;AACtC7B,EAAAA,cAAc,EAAE,MAAM6B,QAAQ,CAACzE,YAAY,EAAb;AADQ,CAAL,CAAnC;;AAIA,eAAelB,OAAO,CAACwF,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvE,kBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { isEmpty, size } from \"lodash\"\nimport { Button, Card, CardBody, Col, Container, Row } from \"reactstrap\"\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\nimport paginationFactory, {\n  PaginationListStandalone,\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\"\nimport * as moment from 'moment';\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\n\nimport EcommerceCustomerColumns from \"./EcommerceCustomerColumns\"\n\nimport {\n  getCustomers\n} from \"../../../store/e-commerce/actions\"\n\nclass EcommerceCustomers extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      customers: [],\n      breadcrumbItems: [\n          { title : \"Ecommerce\", link : \"#\" },\n          { title : \"Customer\", link : \"#\" }\n      ]\n    }\n    this.handleCustomerClick = this.handleCustomerClick.bind(this)\n    this.toggle = this.toggle.bind(this)\n    this.handleValidCustomerSubmit = this.handleValidCustomerSubmit.bind(this)\n    this.handleCustomerClicks = this.handleCustomerClicks.bind(this)\n  }\n\n  componentDidMount() {\n    const { customers, onGetCustomers } = this.props\n    if (customers && !customers.length) {\n      onGetCustomers()\n    }\n    this.setState({ customers })\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { customers } = this.props\n    if (!isEmpty(customers) && size(prevProps.customers) !== size(customers)) {\n      this.setState({ customers: {}, isEdit: false })\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }))\n  }\n\n  handleCustomerClicks = arg => {\n    this.setState({ selectedCustomer: arg })\n    this.toggle()\n  }\n\n  /* Insert,Update Delete data */\n\n  handleDeleteCustomer = (customer) => {\n    const { onDeleteCustomer } = this.props\n    onDeleteCustomer(customer)\n  }\n\n  handleCustomerClick = arg => {\n    const customer = arg\n\n    this.setState({\n      customers: {\n        id: customer.id,\n        username: customer.username,\n        phone: customer.phone,\n        email: customer.email,\n        address: customer.address,\n        rating: customer.rating,\n        walletBalance: customer.walletBalance,\n        joiningDate: customer.joiningDate,\n      },\n      isEdit: true,\n    })\n\n    this.toggle()\n  }\n\n  /**\n   * Handling submit Customer on Customer form\n   */\n  handleValidCustomerSubmit = (e, values) => {\n    const { onAddNewCustomer, onUpdateCustomer } = this.props\n    const { isEdit, customers } = this.state\n\n    if (isEdit) {\n      const updateCustomer = {\n        id: customers.id,\n        username: values.username,\n        phone: values.phone,\n        email: values.email,\n        address: values.address,\n        rating: values.rating,\n        walletBalance: values.walletBalance,\n        joiningDate: values.joiningDate,\n      }\n\n      // update Customer\n      onUpdateCustomer(updateCustomer)\n    } else {\n\n      const newCustomer = {\n        id: Math.floor(Math.random() * (30 - 20)) + 20,\n        username: values[\"username\"],\n        phone: values[\"phone\"],\n        email: values[\"email\"],\n        address: values[\"address\"],\n        rating: values[\"rating\"],\n        walletBalance: values[\"walletBalance\"],\n        joiningDate: values[\"joiningDate\"],\n      }\n      // save new Customer\n      onAddNewCustomer(newCustomer)\n    }\n    this.setState({ selectedCustomer: null })\n    this.toggle()\n  }\n\n  handleValidDate = (date) => {\n    const date1 = moment(new Date(date)).format('DD MMM Y');\n    return date1;\n  }\n\n\n  /* Insert,Update Delete data */\n\n  render() {\n\n    const { customers } = this.props\n\n    //pagination customization\n    const pageOptions = {\n      sizePerPage: 10,\n      totalSize: customers.length, // replace later with size(customers),\n      custom: true,\n    }\n\n    const defaultSorted = [{\n      dataField: 'id',\n      order: 'desc'\n    }];\n\n    const { SearchBar } = Search\n\n    const selectRow = {\n      mode: 'checkbox'\n    };\n\n    return (\n      <React.Fragment>\n\n        <div className=\"page-content\">\n          \n          <Container fluid>\n          <Breadcrumbs title=\"Ecommerce\" breadcrumbItems={this.state.breadcrumbItems} />\n\n            <Row>\n              <Col xs=\"12\">\n                <Card>\n                  <CardBody>\n                    <PaginationProvider\n                      pagination={paginationFactory(pageOptions)}\n                      keyField='id'\n                      data={customers}\n                    >\n                      {({ paginationProps, paginationTableProps }) => (\n                        <ToolkitProvider\n                          keyField='id'\n                          columns={EcommerceCustomerColumns()}\n                          data={customers}\n                          search\n                        >\n                          {toolkitProps => (\n                            <React.Fragment>\n                              <Row>\n                                <Col sm=\"4\">\n                                  <div className=\"search-box me-2 mb-2 d-inline-block\">\n                                    <div className=\"position-relative\">\n                                      <SearchBar\n                                        {...toolkitProps.searchProps}\n                                      />\n                                      <i className=\"bx bx-search-alt search-icon\" />\n                                    </div>\n                                  </div>\n                                </Col>\n                                <Col sm=\"8\">\n                                  <div className=\"text-sm-end\">\n                                    <Button\n                                      type=\"button\"\n                                      color=\"success\"\n                                      className=\"btn-rounded mb-2 me-2\"\n                                      onClick={this.handleCustomerClicks}\n                                    >\n                                      <i className=\"mdi mdi-plus me-1\" />{\" \"}\n                                      New Customers\n                                    </Button>\n                                  </div>\n                                </Col>\n                              </Row>\n\n                              <div className=\"table-responsive\">\n                                <BootstrapTable\n                                  keyField={\"id\"}\n                                  responsive\n                                  bordered={false}\n                                  striped={false}\n                                  defaultSorted={defaultSorted}\n                                  selectRow={selectRow}\n                                  classes={\n                                    \"table align-middle table-nowrap\"\n                                  }\n                                  headerWrapperClasses={\"thead-light\"}\n                                  {...toolkitProps.baseProps}\n                                  {...paginationTableProps}\n                                />\n\n                              </div>\n                              <div className=\"pagination pagination-rounded justify-content-end mb-2\">\n                                <PaginationListStandalone\n                                  {...paginationProps}\n                                />\n                              </div>\n                            </React.Fragment>\n                          )}\n                        </ToolkitProvider>\n                      )}\n                    </PaginationProvider>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nEcommerceCustomers.propTypes = {\n  customers: PropTypes.array,\n  onGetCustomers: PropTypes.func\n}\n\nconst mapStateToProps = ({ Ecommerce }) => ({\n  customers: Ecommerce.customers,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onGetCustomers: () => dispatch(getCustomers())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EcommerceCustomers)"]},"metadata":{},"sourceType":"module"}