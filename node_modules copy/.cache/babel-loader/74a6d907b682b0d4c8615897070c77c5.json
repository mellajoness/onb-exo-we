{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\React Js\\\\ONB\\\\src\\\\pages\\\\Ecommerce\\\\EcommerceOrders\\\\index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isEmpty, size } from \"lodash\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport * as moment from 'moment';\nimport { Button, Card, CardBody, Col, Container, Row } from \"reactstrap\";\nimport EcommerceOrderColumns from \"./EcommerceOrderColumns\"; //Import Breadcrumb\n\nimport Breadcrumbs from '../../../components/Common/Breadcrumb';\nimport { getOrders } from \"../../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EcommerceOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOrderClicks = () => {\n      this.setState({\n        orders: '',\n        isEdit: false\n      });\n      this.toggle();\n    };\n\n    this.handleTableChange = (type, {\n      page,\n      searchText\n    }) => {\n      const {\n        orders\n      } = this.props;\n      this.setState({\n        orders: orders.filter(order => Object.keys(order).some(key => typeof order[key] === \"string\" && order[key].toLowerCase().includes(searchText.toLowerCase())))\n      });\n    };\n\n    this.toggleViewModal = () => {\n      this.setState(prevState => ({\n        viewmodal: !prevState.viewmodal\n      }));\n    };\n\n    this.handleDeleteOrder = order => {\n      const {\n        onDeleteOrder\n      } = this.props;\n      onDeleteOrder(order);\n    };\n\n    this.handleOrderClick = arg => {\n      const order = arg;\n      this.setState({\n        orders: {\n          id: order.id,\n          orderId: order.orderId,\n          billingName: order.billingName,\n          orderdate: order.orderdate,\n          total: order.total,\n          paymentStatus: order.paymentStatus,\n          paymentMethod: order.paymentMethod,\n          badgeclass: order.badgeclass\n        },\n        isEdit: true\n      });\n      this.toggle();\n    };\n\n    this.handleValidOrderSubmit = (e, values) => {\n      const {\n        onAddNewOrder,\n        onUpdateOrder\n      } = this.props;\n      const {\n        isEdit,\n        orders\n      } = this.state;\n\n      if (isEdit) {\n        const updateOrder = {\n          id: orders.id,\n          orderId: values.orderId,\n          billingName: values.billingName,\n          orderdate: values.orderdate,\n          total: values.total,\n          paymentStatus: values.paymentStatus,\n          paymentMethod: values.paymentMethod,\n          badgeclass: values.badgeclass\n        }; // update Order\n\n        onUpdateOrder(updateOrder);\n      } else {\n        const newOrder = {\n          id: Math.floor(Math.random() * (30 - 20)) + 20,\n          orderId: values[\"orderId\"],\n          billingName: values[\"billingName\"],\n          orderdate: values[\"orderdate\"],\n          total: values[\"total\"],\n          paymentStatus: values[\"paymentStatus\"],\n          paymentMethod: values[\"paymentMethod\"],\n          badgeclass: values['badgeclass']\n        }; // save new Order\n\n        onAddNewOrder(newOrder);\n      }\n\n      this.setState({\n        selectedOrder: null\n      });\n      this.toggle();\n    };\n\n    this.handleValidDate = date => {\n      const date1 = moment(new Date(date)).format('DD MMM Y');\n      return date1;\n    };\n\n    this.state = {\n      viewmodal: false,\n      modal: false,\n      orders: [],\n      breadcrumbItems: [{\n        title: \"Ecommerce\",\n        link: \"#\"\n      }, {\n        title: \"Orders\",\n        link: \"#\"\n      }]\n    };\n    this.handleOrderClick = this.handleOrderClick.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleValidOrderSubmit = this.handleValidOrderSubmit.bind(this);\n    this.handleOrderClicks = this.handleOrderClicks.bind(this);\n    this.toLowerCase1 = this.toLowerCase1.bind(this);\n  }\n\n  toLowerCase1(str) {\n    return str.toLowerCase();\n  }\n\n  componentDidMount() {\n    const {\n      orders,\n      onGetOrders\n    } = this.props;\n\n    if (orders && !orders.length) {\n      onGetOrders();\n    }\n\n    this.setState({\n      orders\n    });\n  } // eslint-disable-next-line no-unused-vars\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {\n      orders\n    } = this.props;\n\n    if (!isEmpty(orders) && size(prevProps.orders) !== size(orders)) {\n      this.setState({\n        orders: {},\n        isEdit: false\n      });\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    const {\n      orders\n    } = this.props;\n    const {\n      SearchBar\n    } = Search; //pagination customization\n\n    const pageOptions = {\n      sizePerPage: 10,\n      totalSize: 15,\n      // replace later with size(Order),\n      custom: true\n    };\n    const defaultSorted = [{\n      dataField: 'orderId',\n      order: 'desc'\n    }];\n    const selectRow = {\n      mode: 'checkbox'\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            title: \"Orders\",\n            breadcrumbItems: this.state.breadcrumbItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(PaginationProvider, {\n                    pagination: paginationFactory(pageOptions),\n                    data: orders,\n                    children: ({\n                      paginationProps,\n                      paginationTableProps\n                    }) => /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                      keyField: \"id\",\n                      data: orders,\n                      columns: EcommerceOrderColumns(),\n                      bootstrap4: true,\n                      search: true,\n                      children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          className: \"mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"search-box me-2 mb-2 d-inline-block\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"position-relative\",\n                                children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...toolkitProps.searchProps\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 224,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"bx bx-search-alt search-icon\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 227,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 223,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 222,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"8\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"text-sm-end\",\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"button\",\n                                color: \"success\",\n                                className: \"btn-rounded mb-2 me-2\",\n                                onClick: this.handleOrderClicks,\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"mdi mdi-plus me-1\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 239,\n                                  columnNumber: 39\n                                }, this), \" \", \"Add New Order\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 233,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 232,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 231,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"table-responsive\",\n                          children: /*#__PURE__*/_jsxDEV(BootstrapTable, { ...toolkitProps.baseProps,\n                            ...paginationTableProps,\n                            responsive: true,\n                            bordered: false,\n                            striped: false,\n                            defaultSorted: defaultSorted,\n                            selectRow: selectRow,\n                            classes: \"table align-middle table-nowrap table-check\",\n                            headerWrapperClasses: \"table-light\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 247,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 245,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"pagination pagination-rounded justify-content-end mb-2\",\n                          children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 263,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 262,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nEcommerceOrders.propTypes = {\n  orders: PropTypes.array,\n  onGetOrders: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  orders: state.Ecommerce.orders\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetOrders: () => dispatch(getOrders())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(EcommerceOrders));","map":{"version":3,"sources":["C:/Users/User/Documents/React Js/ONB/src/pages/Ecommerce/EcommerceOrders/index.js"],"names":["React","Component","PropTypes","connect","withRouter","isEmpty","size","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Search","moment","Button","Card","CardBody","Col","Container","Row","EcommerceOrderColumns","Breadcrumbs","getOrders","EcommerceOrders","constructor","props","handleOrderClicks","setState","orders","isEdit","toggle","handleTableChange","type","page","searchText","filter","order","Object","keys","some","key","toLowerCase","includes","toggleViewModal","prevState","viewmodal","handleDeleteOrder","onDeleteOrder","handleOrderClick","arg","id","orderId","billingName","orderdate","total","paymentStatus","paymentMethod","badgeclass","handleValidOrderSubmit","e","values","onAddNewOrder","onUpdateOrder","state","updateOrder","newOrder","Math","floor","random","selectedOrder","handleValidDate","date","date1","Date","format","modal","breadcrumbItems","title","link","bind","toLowerCase1","str","componentDidMount","onGetOrders","length","componentDidUpdate","prevProps","snapshot","render","SearchBar","pageOptions","sizePerPage","totalSize","custom","defaultSorted","dataField","selectRow","mode","paginationProps","paginationTableProps","toolkitProps","searchProps","baseProps","propTypes","array","func","mapStateToProps","Ecommerce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { isEmpty, size } from \"lodash\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\nimport paginationFactory, {\n  PaginationProvider,\n  PaginationListStandalone,\n} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\"\n\nimport * as moment from 'moment';\n\nimport { Button, Card, CardBody, Col, Container, Row} from \"reactstrap\"\n\nimport EcommerceOrderColumns from \"./EcommerceOrderColumns\"\n\n//Import Breadcrumb\nimport Breadcrumbs from '../../../components/Common/Breadcrumb';\n\nimport {\n  getOrders\n} from \"../../../store/actions\"\n\nclass EcommerceOrders extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewmodal: false,\n      modal: false,\n      orders: [],\n      breadcrumbItems : [\n        { title : \"Ecommerce\", link : \"#\" },\n        { title : \"Orders\", link : \"#\" },\n    ],\n    }\n\n    this.handleOrderClick = this.handleOrderClick.bind(this)\n    this.toggle = this.toggle.bind(this)\n    this.handleValidOrderSubmit = this.handleValidOrderSubmit.bind(this)\n    this.handleOrderClicks = this.handleOrderClicks.bind(this)\n    this.toLowerCase1 = this.toLowerCase1.bind(this)\n  }\n\n  toLowerCase1(str) {\n      return str.toLowerCase();\n  }\n\n  componentDidMount() {\n\n    const { orders, onGetOrders } = this.props\n\n    if (orders && !orders.length) {\n      onGetOrders()\n    }\n    this.setState({ orders })\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { orders } = this.props\n    if (!isEmpty(orders) && size(prevProps.orders) !== size(orders)) {\n      this.setState({ orders: {}, isEdit: false })\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }))\n  }\n\n  handleOrderClicks = () => {\n    this.setState({ orders: '', isEdit: false })\n    this.toggle()\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleTableChange = (type, { page, searchText }) => {\n    const { orders } = this.props\n    this.setState({\n      orders: orders.filter(order =>\n        Object.keys(order).some(\n          key =>\n            typeof order[key] === \"string\" &&\n            order[key].toLowerCase().includes(searchText.toLowerCase())\n        )\n      ),\n    })\n  }\n\n  toggleViewModal = () => {\n    this.setState(prevState => ({\n      viewmodal: !prevState.viewmodal,\n    }))\n  }\n\n  /* Insert,Update Delete data */\n\n  handleDeleteOrder = (order) => {\n    const { onDeleteOrder } = this.props\n    onDeleteOrder(order)\n  }\n\n  handleOrderClick = arg => {\n    \n    const order = arg\n\n    this.setState({\n      orders: {\n        id: order.id,\n        orderId: order.orderId,\n        billingName: order.billingName,\n        orderdate: order.orderdate,\n        total: order.total,\n        paymentStatus: order.paymentStatus,\n        paymentMethod: order.paymentMethod,\n        badgeclass: order.badgeclass\n      },\n      isEdit: true,\n    })\n\n    this.toggle()\n\n  }\n\n  /**\n   * Handling submit Order on Order form\n   */\n  handleValidOrderSubmit = (e, values) => {\n    const { onAddNewOrder, onUpdateOrder } = this.props\n    const { isEdit, orders } = this.state\n\n    if (isEdit) {\n      const updateOrder = {\n        id: orders.id,\n        orderId: values.orderId,\n        billingName: values.billingName,\n        orderdate: values.orderdate,\n        total: values.total,\n        paymentStatus: values.paymentStatus,\n        paymentMethod: values.paymentMethod,\n        badgeclass: values.badgeclass\n      }\n\n      // update Order\n      onUpdateOrder(updateOrder)\n    } else {\n\n      const newOrder = {\n        id: Math.floor(Math.random() * (30 - 20)) + 20,\n        orderId: values[\"orderId\"],\n        billingName: values[\"billingName\"],\n        orderdate: values[\"orderdate\"],\n        total: values[\"total\"],\n        paymentStatus: values[\"paymentStatus\"],\n        paymentMethod: values[\"paymentMethod\"],\n        badgeclass: values['badgeclass']\n      }\n      // save new Order\n      onAddNewOrder(newOrder)\n    }\n    this.setState({ selectedOrder: null })\n    this.toggle()\n  }\n\n  handleValidDate = (date) => {\n    const date1 = moment(new Date(date)).format('DD MMM Y');\n    return date1;\n  }\n\n  render() {\n    const { orders } = this.props\n\n    const { SearchBar } = Search\n\n    //pagination customization\n    const pageOptions = {\n      sizePerPage: 10,\n      totalSize: 15, // replace later with size(Order),\n      custom: true,\n    }\n\n    const defaultSorted = [{\n      dataField: 'orderId',\n      order: 'desc'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n    };\n\n    return (\n      <React.Fragment>\n        <div className=\"page-content\">\n          \n          <Container fluid>\n          <Breadcrumbs title=\"Orders\" breadcrumbItems={this.state.breadcrumbItems} />\n            <Row>\n              <Col xs=\"12\">\n                <Card>\n                  <CardBody>\n                    <PaginationProvider\n                      pagination={paginationFactory(pageOptions)}\n                      data={orders}\n                    >\n                      {({ paginationProps, paginationTableProps }) => (\n                        <ToolkitProvider\n                          keyField=\"id\"\n                          data={orders}\n                          columns={EcommerceOrderColumns()}\n                          bootstrap4\n                          search\n                        >\n                          \n                          {toolkitProps => (\n                            <React.Fragment>\n                              \n                              <Row className=\"mb-2\">\n                                <Col sm=\"4\">\n                                  <div className=\"search-box me-2 mb-2 d-inline-block\">\n                                    <div className=\"position-relative\">\n                                      <SearchBar\n                                        {...toolkitProps.searchProps}\n                                      />\n                                      <i className=\"bx bx-search-alt search-icon\" />\n                                    </div>\n                                  </div>\n                                </Col>\n                                <Col sm=\"8\">\n                                  <div className=\"text-sm-end\">\n                                    <Button\n                                      type=\"button\"\n                                      color=\"success\"\n                                      className=\"btn-rounded mb-2 me-2\"\n                                      onClick={this.handleOrderClicks}\n                                    >\n                                      <i className=\"mdi mdi-plus me-1\" />{\" \"}\n                                      Add New Order\n                                    </Button>\n                                  </div>\n                                </Col>\n                              </Row>\n                              <div className=\"table-responsive\">\n\n                                <BootstrapTable\n                                  {...toolkitProps.baseProps}\n                                  {...paginationTableProps}\n                                  responsive\n                                  bordered={false}\n                                  striped={false}\n                                  defaultSorted={defaultSorted}\n                                  selectRow={selectRow}\n                                  classes={\n                                    \"table align-middle table-nowrap table-check\"\n                                  }\n                                  headerWrapperClasses={\"table-light\"}\n                                />\n                                \n                              </div>\n                              <div className=\"pagination pagination-rounded justify-content-end mb-2\">\n                                <PaginationListStandalone\n                                  {...paginationProps}\n                                />\n                              </div>\n                            </React.Fragment>\n                          )}\n                        </ToolkitProvider>\n                      )}\n                    </PaginationProvider>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nEcommerceOrders.propTypes = {\n  orders: PropTypes.array,\n  onGetOrders: PropTypes.func\n}\n\nconst mapStateToProps = state => ({\n  orders: state.Ecommerce.orders,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onGetOrders: () => dispatch(getOrders())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(EcommerceOrders))"]},"metadata":{},"sourceType":"module"}