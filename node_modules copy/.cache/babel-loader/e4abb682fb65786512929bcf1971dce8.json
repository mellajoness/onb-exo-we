{"ast":null,"code":"// import { takeEvery, put, call } from \"redux-saga/effects\"\n// // Calender Redux States\n// import {\n//   ADD_NEW_EVENT,\n//   DELETE_EVENT,\n//   GET_CATEGORIES,\n//   GET_EVENTS,\n//   UPDATE_EVENT,\n// } from \"./actionTypes\";\n// import {\n//   getEventsSuccess,\n//   getEventsFail,\n//   addEventFail,\n//   addEventSuccess,\n//   updateEventSuccess,\n//   updateEventFail,\n//   deleteEventSuccess,\n//   deleteEventFail,\n//   getCategoriesSuccess,\n//   getCategoriesFail,\n// } from \"./actions\"\n// //Include Both Helper File with needed methods\n// import {\n//   getEvents,\n//   addNewEvent,\n//   updateEvent,\n//   deleteEvent,\n//   getCategories,\n// } from \"../../helpers/fackBackend_Helper\"\n// function* fetchEvents() {\n//   try {\n//     const response = yield call(getEvents)\n//     yield put(getEventsSuccess(response))\n//   } catch (error) {\n//     yield put(getEventsFail(error))\n//   }\n// }\n// function* onAddNewEvent({ payload: event }) {\n//   try {\n//     const response = yield call(addNewEvent, event)\n//     yield put(addEventSuccess(response))\n//   } catch (error) {\n//     yield put(addEventFail(error))\n//   }\n// }\n// function* onUpdateEvent({ payload: event }) {\n//   try {\n//     const response = yield call(updateEvent, event)\n//     yield put(updateEventSuccess(response))\n//   } catch (error) {\n//     yield put(updateEventFail(error))\n//   }\n// }\n// function* onDeleteEvent({ payload: event }) {\n//   try {\n//     const response = yield call(deleteEvent, event)\n//     yield put(deleteEventSuccess(response))\n//   } catch (error) {\n//     yield put(deleteEventFail(error))\n//   }\n// }\n// function* onGetCategories() {\n//   try {\n//     const response = yield call(getCategories)\n//     yield put(getCategoriesSuccess(response))\n//   } catch (error) {\n//     yield put(getCategoriesFail(error))\n//   }\n// }\n// function* calendarSaga() {\n//   yield takeEvery(GET_EVENTS, fetchEvents)\n//   yield takeEvery(ADD_NEW_EVENT, onAddNewEvent)\n//   yield takeEvery(UPDATE_EVENT, onUpdateEvent)\n//   yield takeEvery(DELETE_EVENT, onDeleteEvent)\n//   yield takeEvery(GET_CATEGORIES, onGetCategories)\n// }\n// export default calendarSaga","map":{"version":3,"sources":["C:/Users/User/Documents/React Js/ONB/src/store/calendar/saga.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { takeEvery, put, call } from \"redux-saga/effects\"\n\n// // Calender Redux States\n// import {\n//   ADD_NEW_EVENT,\n//   DELETE_EVENT,\n//   GET_CATEGORIES,\n//   GET_EVENTS,\n//   UPDATE_EVENT,\n// } from \"./actionTypes\";\n\n// import {\n//   getEventsSuccess,\n//   getEventsFail,\n//   addEventFail,\n//   addEventSuccess,\n//   updateEventSuccess,\n//   updateEventFail,\n//   deleteEventSuccess,\n//   deleteEventFail,\n//   getCategoriesSuccess,\n//   getCategoriesFail,\n// } from \"./actions\"\n\n// //Include Both Helper File with needed methods\n// import {\n//   getEvents,\n//   addNewEvent,\n//   updateEvent,\n//   deleteEvent,\n//   getCategories,\n// } from \"../../helpers/fackBackend_Helper\"\n\n// function* fetchEvents() {\n//   try {\n//     const response = yield call(getEvents)\n//     yield put(getEventsSuccess(response))\n//   } catch (error) {\n//     yield put(getEventsFail(error))\n//   }\n// }\n\n// function* onAddNewEvent({ payload: event }) {\n//   try {\n//     const response = yield call(addNewEvent, event)\n//     yield put(addEventSuccess(response))\n//   } catch (error) {\n//     yield put(addEventFail(error))\n//   }\n// }\n\n// function* onUpdateEvent({ payload: event }) {\n//   try {\n//     const response = yield call(updateEvent, event)\n//     yield put(updateEventSuccess(response))\n//   } catch (error) {\n//     yield put(updateEventFail(error))\n//   }\n// }\n\n// function* onDeleteEvent({ payload: event }) {\n//   try {\n//     const response = yield call(deleteEvent, event)\n//     yield put(deleteEventSuccess(response))\n//   } catch (error) {\n//     yield put(deleteEventFail(error))\n//   }\n// }\n\n// function* onGetCategories() {\n//   try {\n//     const response = yield call(getCategories)\n//     yield put(getCategoriesSuccess(response))\n//   } catch (error) {\n//     yield put(getCategoriesFail(error))\n//   }\n// }\n\n// function* calendarSaga() {\n//   yield takeEvery(GET_EVENTS, fetchEvents)\n//   yield takeEvery(ADD_NEW_EVENT, onAddNewEvent)\n//   yield takeEvery(UPDATE_EVENT, onUpdateEvent)\n//   yield takeEvery(DELETE_EVENT, onDeleteEvent)\n//   yield takeEvery(GET_CATEGORIES, onGetCategories)\n// }\n\n// export default calendarSaga\n"]},"metadata":{},"sourceType":"module"}